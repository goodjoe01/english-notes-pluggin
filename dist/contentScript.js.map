{"version":3,"file":"contentScript.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://yt-extension/./src/content/utils.ts","webpack://yt-extension/webpack/bootstrap","webpack://yt-extension/webpack/runtime/define property getters","webpack://yt-extension/webpack/runtime/hasOwnProperty shorthand","webpack://yt-extension/webpack/runtime/make namespace object","webpack://yt-extension/./src/content/contentScript.ts"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nexport function getActiveTabURL() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const tabs = yield chrome.tabs.query({\r\n            currentWindow: true,\r\n            active: true\r\n        });\r\n        return tabs[0];\r\n    });\r\n}\r\nexport const getTime = (seconds) => {\r\n    const date = new Date(0);\r\n    date.setSeconds(seconds);\r\n    const date1 = date.toISOString().substring(11, 19);\r\n    return date1;\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { getTime } from './utils';\r\nlet currentVideo = \"\";\r\nlet currentVideoBookmarks = [];\r\nlet youtubeVideo;\r\nconst getBookmarks = () => __awaiter(void 0, void 0, void 0, function* () {\r\n    const data = yield chrome.storage.sync.get([currentVideo]);\r\n    const bookmarks = data[currentVideo] ? JSON.parse(data[currentVideo]) : [];\r\n    return bookmarks;\r\n});\r\nconst checkIfBookmarkExist = (id) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const exists = currentVideoBookmarks.find((bookmark) => bookmark.id === id);\r\n    if (exists)\r\n        return true;\r\n    else\r\n        return false;\r\n});\r\nconst addBookmarkEventHandler = () => __awaiter(void 0, void 0, void 0, function* () {\r\n    const currentVideoTime = youtubeVideo.currentTime;\r\n    const existe = yield checkIfBookmarkExist(currentVideoTime.toString());\r\n    if (existe === false) {\r\n        const newBookmark = {\r\n            id: currentVideoTime.toString(),\r\n            title: 'Bookmark at ' + getTime(currentVideoTime),\r\n            time: currentVideoTime\r\n        };\r\n        chrome.storage.sync.set({\r\n            [currentVideo]: JSON.stringify([...currentVideoBookmarks, newBookmark])\r\n        });\r\n        currentVideoBookmarks = yield getBookmarks(); // 3\r\n    }\r\n});\r\nconst newVideoLoaded = () => __awaiter(void 0, void 0, void 0, function* () {\r\n    const bookmarkExists = document.querySelector('.bookmark-btn');\r\n    currentVideoBookmarks = yield getBookmarks();\r\n    if (!bookmarkExists) {\r\n        const youtubeLeftControls = document.querySelector('.ytp-left-controls');\r\n        youtubeVideo = document.querySelector('.video-stream');\r\n        const container = document.createElement('div');\r\n        container.className = 'bookmark-icon-container';\r\n        const bookmarkBtn = document.createElement('img');\r\n        bookmarkBtn.src = chrome.runtime.getURL(\"bookmark-icon.png\");\r\n        bookmarkBtn.className = 'ytp-button bookmark-btn';\r\n        bookmarkBtn.style.width = '30px';\r\n        bookmarkBtn.style.height = '30px';\r\n        container.appendChild(bookmarkBtn);\r\n        youtubeLeftControls === null || youtubeLeftControls === void 0 ? void 0 : youtubeLeftControls.appendChild(container);\r\n        bookmarkBtn.addEventListener('click', addBookmarkEventHandler);\r\n    }\r\n});\r\n// Function called when a new message is received\r\nconst messagesFromBackground = (msg, sender, sendResponse) => __awaiter(void 0, void 0, void 0, function* () {\r\n    if (msg.type === 'NEW_VIDEO') {\r\n        currentVideo = msg.videoId;\r\n        newVideoLoaded();\r\n    }\r\n    else if (msg.type === 'GO_BACK') {\r\n        youtubeVideo.currentTime = msg.currentTime;\r\n    }\r\n    else if (msg.type === 'DELETE') {\r\n        currentVideoBookmarks = currentVideoBookmarks.filter((bookmark) => bookmark.id != msg.bookmarkId);\r\n        chrome.storage.sync.set({ [currentVideo]: JSON.stringify(currentVideoBookmarks) });\r\n        sendResponse(currentVideoBookmarks);\r\n    }\r\n});\r\nchrome.runtime.onMessage.addListener(messagesFromBackground);\r\n"],"names":[],"sourceRoot":""}